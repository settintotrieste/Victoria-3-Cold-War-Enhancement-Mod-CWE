namespace = historical_domestic_unrest

# The civil rights movement
historical_domestic_unrest.1 = {
    type = country_event

    title = USA_civil_rights_movement.t 						# Title of the event; ADD LOCALISATION
    desc = USA_civil_rights_movement.d 							# Description of the event; ADD LOCALISATION
    #flavor = USA_civil_rights_movement.f 						# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/europenorthamerica_political_extremism.bk2" }

    icon = "gfx/interface/icons/invention_icons/anarchy.dds" 		# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {													# What triggers the event, if using other events or journal entries leave empty
		
		#Overlord conditions
		c:USA ?= this											# Change TAG of the overlord ****
		game_date >= 1954.5.17									# START DATE: Date colony became self governing ****
		game_date < 1964.5.17									# END DATE: All historical events must not fire 10 years after the START DATE ****
		
		is_a_democracy = yes									# Correct gov types
		is_sufficiently_independent = yes						# is_vassal = no		
		#is_at_war = no											# war = no
		
		#Cause of unrest
		hidden_trigger = { has_journal_entry = je_apartheid }
		
		# Event has not been fired before
		NOT = { has_variable = USA_civil_rights_movement_hdu }	# CHANGE ****
		
    }
	
	immediate = {
	
		# Fire only once
		set_variable = USA_civil_rights_movement_hdu				# Change variable ****
		
	}
    
    option = {
        name = historical_domestic_unrest.option.1					# Yes
        highlighted_option = yes
		default_option = yes
		
		#Create agitator
		create_character = {
			first_name = "Martin_Luther_King_first_name"
			last_name = "Martin_Luther_King_last_name"
			is_agitator = yes historical = yes
			birth_date = 1929.1.15
			interest_group = ig_petty_bourgeoisie
			ideology = ideology_agitator_pro_human_rights
            culture = cu:afro_american
			religion = rel:protestant
			traits = {
				charismatic
				pious
				persistent
			}
			on_created = { set_variable = Martin_Luther_King }
		}
		
		#Domestic reaction
		add_radicals = {
			value = small_radicals
			culture = cu:afro_american
		}
		
		ai_chance = { 
			base = 90 
		}
		
    }
	
	option = {
        name = historical_domestic_unrest.option.2					# No
		
		#Enact new regime
		activate_law = law_type:law_multicultural
		add_primary_culture = cu:afro_american
		
		#Major discontent
		add_radicals = {
			culture = cu:anglo_american
			value = very_large_radicals
		}
		add_modifier = { 
			name = stirrings_of_revolution
			months = 60 
			is_decaying = yes 
		}
		
		ai_chance = { 
			base = 10 modifier = { trigger = { has_global_variable = historical_railroading_active } add = -100 } 
		}
		
    }

}

# Assassination of Martin Luther King
historical_domestic_unrest.2 = {
    type = country_event

    title = USA_assassinate_MLK.t 								# Title of the event; ADD LOCALISATION
    desc = USA_assassinate_MLK.d 								# Description of the event; ADD LOCALISATION
    #flavor = USA_assassinate_MLK.f 							# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/southamerica_public_figure_assassination.bk2" }

    icon = "gfx/interface/icons/invention_icons/anarchy.dds" 		# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {													# What triggers the event, if using other events or journal entries leave empty
		
		#Overlord conditions
		c:USA ?= this											# Change TAG of the overlord ****
		game_date >= 1968.4.4									# START DATE: Date colony became self governing ****
		game_date < 1978.4.4									# END DATE: All historical events must not fire 10 years after the START DATE ****
		
		is_a_democracy = yes									# Correct gov types
		is_sufficiently_independent = yes						# is_vassal = no		
		#is_at_war = no											# war = no
		
		# Event has not been fired before
		NOT = { has_variable = USA_assassinate_MLK_hdu }		# CHANGE ****
		
		#Cause of unrest
		any_scope_character = {
			has_role = agitator
			has_variable = Martin_Luther_King
		}
		
    }
	
	immediate = {
	
		# Fire only once
		set_variable = USA_assassinate_MLK_hdu					# Change variable ****
		
	}
    
    option = {
        name = historical_domestic_unrest.option.1				# Yes
        highlighted_option = yes
		default_option = yes
		
		#Kill character
		random_scope_character = {
			limit = { has_variable = Martin_Luther_King }
			kill_character = yes
		}
		
		#Domestic reaction
		add_radicals = {
			value = large_radicals
			culture = cu:afro_american
		}
		
		ai_chance = { 
			base = 90 
		}
		
    }
	
	option = {
        name = historical_domestic_unrest.option.2				# No
		
		#Major discontent
		add_radicals = {
			culture = cu:anglo_american
			value = very_large_radicals
		}
		add_modifier = { 
			name = stirrings_of_revolution
			months = 60 
			is_decaying = yes 
		}
		
		ai_chance = { 
			base = 10 modifier = { trigger = { has_global_variable = historical_railroading_active } add = -100 } 
		}
		
    }

}

# The BLM protests
historical_domestic_unrest.3 = {
    type = country_event

    title = USA_blm_protests.t 									# Title of the event; ADD LOCALISATION
    desc = USA_blm_protests.d 									# Description of the event; ADD LOCALISATION
    #flavor = USA_blm_protests.f 								# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/europenorthamerica_political_extremism.bk2" }

    icon = "gfx/interface/icons/invention_icons/anarchy.dds" 		# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {													# What triggers the event, if using other events or journal entries leave empty
		
		#Overlord conditions
		c:USA ?= this											# Change TAG of the overlord ****
		game_date >= 2020.5.26									# START DATE: Date colony became self governing ****
		game_date < 2030.5.26									# END DATE: All historical events must not fire 10 years after the START DATE ****
		
		is_a_democracy = yes									# Correct gov types
		is_sufficiently_independent = yes						# is_vassal = no		
		is_at_war = no											# war = no
		
		# Event has not been fired before
		NOT = { has_variable = USA_blm_protests_hdu }			# CHANGE ****
		
		#Cause of unrest
		NOT = { has_law = law_type:law_lenient_policing }
		exists = ruler
		ruler = { has_culture = cu:anglo_american }
		
    }
	
	immediate = {
	
		# Fire only once
		set_variable = USA_blm_protests_hdu						# Change variable ****
		
	}
    
    option = {
        name = historical_domestic_unrest.option.1				# Yes
        highlighted_option = yes
		default_option = yes
		
		#Domestic reaction
		add_radicals = {
			value = large_radicals
			culture = cu:afro_american
		}
		add_modifier = { 
			name = stirrings_of_revolution
			months = 12
			is_decaying = yes 
		}
		
		ai_chance = { 
			base = 90 
		}
		
    }
	
	option = {
        name = historical_domestic_unrest.option.2				# No
		
		#Effect
		activate_law = law_type:law_lenient_policing
		
		#Major discontent
		add_radicals = {
			culture = cu:anglo_american
			value = large_radicals
		}
		
		ai_chance = { 
			base = 10 modifier = { trigger = { has_global_variable = historical_railroading_active } add = -100 } 
		}
		
    }

}

# The 1967 Hong Kong Riots
historical_domestic_unrest.4 = {
    type = country_event
	placement = scope:hong_kong_state

    title = GBR_1967_HKG_riots.t 								# Title of the event; ADD LOCALISATION
    desc = GBR_1967_HKG_riots.d 								# Description of the event; ADD LOCALISATION
    #flavor = GBR_1967_HKG_riots.f 								# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/europenorthamerica_political_extremism.bk2" }

    icon = "gfx/interface/icons/invention_icons/anarchy.dds" 		# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {													# What triggers the event, if using other events or journal entries leave empty
		
		#Overlord conditions
		c:GBR ?= this											# Change TAG of the overlord ****
		game_date >= 1967.5.1									# START DATE: Date colony became self governing ****
		game_date < 1977.5.1									# END DATE: All historical events must not fire 10 years after the START DATE ****
		
		#is_a_democracy = yes									# Correct gov types
		is_sufficiently_independent = yes						# is_vassal = no		
		is_at_war = no											# war = no
		
		#Cause of unrest
		NOT = { exists = c:HKG }
		owns_treaty_port_in = STATE_SHAOZHOU
		OR = {
			AND = { 
				exists = c:CHI 
				c:CHI ?= { is_a_communist_government = yes has_state_in_state_region = STATE_SHAOZHOU } 
			}
			AND = { 
				exists = c:PRC
				c:PRC ?= { is_a_communist_government = yes has_state_in_state_region = STATE_SHAOZHOU } 
			}
		}
		
		# Event has not been fired before
		NOT = { has_variable = GBR_1967_HKG_riots_hdu }			# CHANGE ****
		
    }
	
	immediate = {
	
		random_scope_state = {
			limit = {
				state_region = s:STATE_SHAOZHOU
			}
			save_scope_as = hong_kong_state
		}
	
		# Fire only once
		set_variable = GBR_1967_HKG_riots_hdu					# Change variable ****
		
	}
    
    option = {
        name = historical_domestic_unrest.option.1				# Yes
        highlighted_option = yes
		default_option = yes
		
		#Domestic reaction
		scope:hong_kong_state = {
			add_radicals_in_state = {
				value = very_large_radicals
				strata = poor
			}
		}
		
		ai_chance = { 
			base = 90 
		}
		
    }
	
	option = {
        name = historical_domestic_unrest.option.2			# No
		
		#Create self-governing colony
		create_country = {
			tag = HKG										# Change TAG of country being released ****
			origin = ROOT
			state = scope:hong_kong_state
			
			on_created = {									# Set government laws & rulers here
				
				# SET laws for colony ****
				if = { 
					limit = { ROOT = { is_a_monarchy = yes } }
					effect_starting_politics_constitutional_monarchy = yes
				}
				else = {
					effect_starting_politics_parliamentary_republic = yes
				}
				effect_starting_politics_democratic = yes
				effect_starting_politics_constitutional_unitary_state = yes
				effect_starting_politics_war_policy_anti_military = yes
				effect_starting_politics_economic_policy_interventionism = yes
				effect_starting_politics_trade_policy_protectionism = yes
				effect_starting_politics_anti_nuclear_policy = yes
				
				# Set diplomatic recognition
				set_country_type = unrecognized
			}
		}
		
		# Overlord create self governing colony pact with colony
		if = {
			limit = { exists = c:HKG }
			create_diplomatic_pact = {
				country = c:HKG										# Change TAG ****
				type = semi_autonomous_colony
			}
			create_decolonisation_pacts = yes
		}
		
		#International community likes this
		change_infamy = -10
		
		ai_chance = { 
			base = 10 modifier = { trigger = { has_global_variable = historical_railroading_active } add = -100 } 
		}
		
    }

}

# The 12-3 incident
historical_domestic_unrest.5 = {
    type = country_event
	placement = scope:hong_kong_state

    title = POR_1966_MCA_riots.t 								# Title of the event; ADD LOCALISATION
    desc = POR_1966_MCA_riots.d 								# Description of the event; ADD LOCALISATION
    #flavor = POR_1966_MCA_riots.f 								# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/europenorthamerica_political_extremism.bk2" }

    icon = "gfx/interface/icons/invention_icons/anarchy.dds" 		# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {													# What triggers the event, if using other events or journal entries leave empty
		
		#Overlord conditions
		c:POR ?= this											# Change TAG of the overlord ****
		game_date >= 1966.12.3									# START DATE: Date colony became self governing ****
		game_date < 1976.12.3									# END DATE: All historical events must not fire 10 years after the START DATE ****
		
		#is_a_democracy = yes									# Correct gov types
		is_sufficiently_independent = yes						# is_vassal = no		
		is_at_war = no											# war = no
		
		#Cause of unrest
		NOT = { exists = c:MCA }
		owns_treaty_port_in = STATE_GUANGDONG
		OR = {
			AND = { 
				exists = c:CHI 
				c:CHI ?= { is_a_communist_government = yes has_state_in_state_region = STATE_GUANGDONG } 
			}
			AND = { 
				exists = c:PRC
				c:PRC ?= { is_a_communist_government = yes has_state_in_state_region = STATE_GUANGDONG } 
			}
		}
		
		# Event has not been fired before
		NOT = { has_variable = POR_1966_MCA_riots_hdu }			# CHANGE ****
		
    }
	
	immediate = {
	
		random_scope_state = {
			limit = {
				state_region = s:STATE_GUANGDONG
			}
			save_scope_as = hong_kong_state
		}
	
		# Fire only once
		set_variable = POR_1966_MCA_riots_hdu					# Change variable ****
		
	}
    
    option = {
        name = historical_domestic_unrest.option.1				# Yes
        highlighted_option = yes
		default_option = yes
		
		#Domestic reaction
		scope:hong_kong_state = {
			add_radicals_in_state = {
				value = very_large_radicals
				strata = poor
			}
		}
		
		ai_chance = { 
			base = 90 
		}
		
    }
	
	option = {
        name = historical_domestic_unrest.option.2			# No
		
		#Create self-governing colony
		create_country = {
			tag = MCA										# Change TAG of country being released ****
			origin = ROOT
			state = scope:hong_kong_state
			
			on_created = {									# Set government laws & rulers here
				
				# SET laws for colony ****
				if = { 
					limit = { ROOT = { is_a_monarchy = yes } }
					effect_starting_politics_constitutional_monarchy = yes
				}
				else = {
					effect_starting_politics_parliamentary_republic = yes
				}
				effect_starting_politics_democratic = yes
				effect_starting_politics_constitutional_unitary_state = yes
				effect_starting_politics_war_policy_anti_military = yes
				effect_starting_politics_economic_policy_interventionism = yes
				effect_starting_politics_trade_policy_protectionism = yes
				effect_starting_politics_anti_nuclear_policy = yes
				
				# Set diplomatic recognition
				set_country_type = unrecognized
			}
		}
		
		# Overlord create self governing colony pact with colony
		if = {
			limit = { exists = c:MCA }
			create_diplomatic_pact = {
				country = c:MCA										# Change TAG ****
				type = semi_autonomous_colony
			}
			create_decolonisation_pacts = yes
		}
		
		#International community likes this
		change_infamy = -10
		
		ai_chance = { 
			base = 10 modifier = { trigger = { has_global_variable = historical_railroading_active } add = -100 } 
		}
		
    }

}

# The 2014 Hong Kong Protests
historical_domestic_unrest.6 = {
    type = country_event
	placement = scope:hong_kong_state

    title = PRC_2014_HKG_protests.t 							# Title of the event; ADD LOCALISATION
    desc = PRC_2014_HKG_protests.d 								# Description of the event; ADD LOCALISATION
    #flavor = PRC_2014_HKG_protests.f 							# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/europenorthamerica_political_extremism.bk2" }

    icon = "gfx/interface/icons/invention_icons/anarchy.dds" 		# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {													# What triggers the event, if using other events or journal entries leave empty
		
		#Overlord conditions
		OR = { c:CHI ?= this c:PRC ?= this }
		game_date >= 2014.9.26									# START DATE: Date colony became self governing ****
		game_date < 2024.9.26									# END DATE: All historical events must not fire 10 years after the START DATE ****
		
		is_a_dictatorship = yes									# Correct gov types
		is_sufficiently_independent = yes						# is_vassal = no		
		is_at_war = no											# war = no
		
		#Cause of unrest
		exists = c:HKG
		c:HKG ?= {
			is_a_democracy = yes
			is_direct_subject_of = ROOT 
			is_not_sufficiently_independent = yes
		}
		
		# Event has not been fired before
		NOT = { has_variable = PRC_2014_HKG_protests_hdu }		# CHANGE ****
		
    }
	
	immediate = {
	
		random_scope_state = {
			limit = {
				state_region = s:STATE_SHAOZHOU
			}
			save_scope_as = hong_kong_state
		}
	
		# Fire only once
		set_variable = PRC_2014_HKG_protests_hdu				# Change variable ****
		
	}
    
    option = {
        name = historical_domestic_unrest.option.1				# Yes
        highlighted_option = yes
		default_option = yes
		
		#Domestic reaction
		scope:hong_kong_state = {
			add_radicals_in_state = {
				value = very_large_radicals
			}
		}
		
		#International community hates this
		change_infamy = 10
		
		ai_chance = { 
			base = 90 
		}
		
    }
	
	option = {
        name = historical_domestic_unrest.option.2			# No
		
		#Increase democracy
		c:HKG = {
			effect_starting_politics_parliamentary_republic = yes
			effect_starting_politics_democratic = yes
		}
		
		ai_chance = { 
			base = 10 modifier = { trigger = { has_global_variable = historical_railroading_active } add = -100 } 
		}
		
    }

}

# The 2019 Hong Kong Protests
historical_domestic_unrest.7 = {
    type = country_event
	placement = scope:hong_kong_state

    title = PRC_2019_HKG_protests.t 							# Title of the event; ADD LOCALISATION
    desc = PRC_2019_HKG_protests.d 								# Description of the event; ADD LOCALISATION
    #flavor = PRC_2019_HKG_protests.f 							# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/europenorthamerica_political_extremism.bk2" }

    icon = "gfx/interface/icons/invention_icons/anarchy.dds" 		# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {													# What triggers the event, if using other events or journal entries leave empty
		
		#Overlord conditions
		OR = { c:CHI ?= this c:PRC ?= this }
		game_date >= 2019.3.15									# START DATE: Date colony became self governing ****
		game_date < 2029.3.15									# END DATE: All historical events must not fire 10 years after the START DATE ****
		
		is_a_dictatorship = yes									# Correct gov types
		is_sufficiently_independent = yes						# is_vassal = no		
		is_at_war = no											# war = no
		
		#Cause of unrest
		exists = c:HKG
		c:HKG ?= {
			is_a_democracy = yes
			is_direct_subject_of = ROOT 
			is_not_sufficiently_independent = yes
		}
		
		# Event has not been fired before
		NOT = { has_variable = PRC_2019_HKG_protests_hdu }		# CHANGE ****
		
    }
	
	immediate = {
	
		random_scope_state = {
			limit = {
				state_region = s:STATE_SHAOZHOU
			}
			save_scope_as = hong_kong_state
		}
	
		# Fire only once
		set_variable = PRC_2019_HKG_protests_hdu				# Change variable ****
		
	}
    
    option = {
        name = historical_domestic_unrest.option.1				# Yes
        highlighted_option = yes
		default_option = yes
		
		#Reduce democracy
		c:HKG = {
			effect_starting_politics_dictatorship = yes
		}
		
		#Domestic reaction
		scope:hong_kong_state = {
			add_radicals_in_state = {
				value = very_large_radicals
			}
		}
		
		#International community hates this
		change_infamy = 10
		
		ai_chance = { 
			base = 90 
		}
		
    }
	
	option = {
        name = historical_domestic_unrest.option.2			# No
		
		#Increase democracy
		c:HKG = {
			effect_starting_politics_parliamentary_republic = yes
			effect_starting_politics_very_democratic = yes
		}
		
		ai_chance = { 
			base = 10 modifier = { trigger = { has_global_variable = historical_railroading_active } add = -100 } 
		}
		
    }

}

# Protests of 1968
historical_domestic_unrest.8 = {
    type = country_event

    title = protests_of_1968.t 									# Title of the event; ADD LOCALISATION
    desc = protests_of_1968.d 									# Description of the event; ADD LOCALISATION
    #flavor = protests_of_1968.f 								# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/europenorthamerica_political_extremism.bk2" }

    icon = "gfx/interface/icons/invention_icons/anarchy.dds" 		# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {													# What triggers the event, if using other events or journal entries leave empty
		
		#Overlord conditions
		OR = { 
			c:BRZ ?= this
			c:FRA ?= this
			c:ITA ?= this
			c:JAP ?= this
			c:MEX ?= this
			c:PAK ?= this
			c:SAF ?= this
			c:SPA ?= this
			c:SWE ?= this
			c:EGY ?= this
			c:WGR ?= this
		}
		game_date >= 1968.1.1									# START DATE: Date colony became self governing ****
		game_date < 1978.1.1									# END DATE: All historical events must not fire 10 years after the START DATE ****
		
		OR = { 
			is_a_democracy = yes
			is_some_kind_of_democracy = yes
			is_a_nationalist_government = yes
		}
		is_sufficiently_independent = yes						# is_vassal = no		
		is_at_war = no											# war = no
		
		#Cause of unrest
		NOT = { radical_left_wing_ruling_coalition = yes }
		ig:ig_trade_unions ?= { is_marginal = no }
		
		# Event has not been fired before
		NOT = { has_variable = protests_of_1968_hdu }			# CHANGE ****
		
    }
	
	immediate = {
	
		# Fire only once
		set_variable = protests_of_1968_hdu						# Change variable ****
		
	}
    
    option = {
        name = historical_domestic_unrest.option.1				# Yes
        highlighted_option = yes
		default_option = yes
		
		#Domestic reaction
		add_radicals = {
			value = medium_radicals
			interest_group = ig:ig_trade_unions
		}
		add_radicals = {
			value = medium_radicals
			interest_group = ig:ig_petty_bourgeoisie
		}
		
		ai_chance = { 
			base = 90 
		}
		
    }
	
	option = {
        name = historical_domestic_unrest.option.2				# No
		
		#Please socialists
		if = {
			limit = { NOT = { has_law = law_type:law_full_trade_unions } }
			activate_law = law_type:law_full_trade_unions
		}
		if = {
			limit = { NOT = { has_law = law_type:law_lenient_policing } }
			activate_law = law_type:law_lenient_policing
		}
		if = {
			limit = { NOT = { has_law = law_type:law_full_womens_rights } }
			activate_law = law_type:law_full_womens_rights
		}
		if = {
			limit = { has_law = law_type:law_offensive_war }
			activate_law = law_type:law_defensive_war
		}
		if = {
			limit = { NOT = { has_law = law_type:law_full_free_speech } }
			activate_law = law_type:law_full_free_speech
		}
		if = {
			limit = { NOT = { has_law = law_type:law_high_social_security } }
			activate_law = law_type:law_high_social_security
		}
		if = {
			limit = { NOT = { has_law = law_type:law_taxation_5 } }
			activate_law = law_type:law_taxation_5
		}
		if = {
			limit = { NOT = { has_law = law_type:law_wmd_banned } }
			activate_law = law_type:law_wmd_banned
		}
		if = {
			limit = { NOT = { has_law = law_type:law_no_secret_police } }
			activate_law = law_type:law_no_secret_police
		}
		
		#Domestic reaction
		add_radicals = {
			value = large_radicals
			interest_group = ig:ig_industrialists
		}
		add_radicals = {
			value = large_radicals
			interest_group = ig:ig_landowners
		}
		
		ai_chance = { 
			base = 10 modifier = { trigger = { has_global_variable = historical_railroading_active } add = -100 } 
		}
		
    }

}

# The Sanrizuka Struggle
historical_domestic_unrest.9 = {
    type = country_event
	placement = scope:terror_attack_state

    title = JAP_Sanrizuka_Struggle.t 							# Title of the event; ADD LOCALISATION
    desc = JAP_Sanrizuka_Struggle.d 							# Description of the event; ADD LOCALISATION
    #flavor = JAP_Sanrizuka_Struggle.f 							# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/europenorthamerica_political_extremism.bk2" }

    icon = "gfx/interface/icons/invention_icons/anarchy.dds" 		# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {													# What triggers the event, if using other events or journal entries leave empty
		
		#Overlord conditions
		c:JAP ?= this											# Change TAG of the overlord ****
		game_date >= 1966.6.22									# START DATE: Date colony became self governing ****
		game_date < 1976.6.22									# END DATE: All historical events must not fire 10 years after the START DATE ****
		
		is_a_democracy = yes									# Correct gov types
		is_sufficiently_independent = yes						# is_vassal = no		
		is_at_war = no											# war = no
		
		# Event has not been fired before
		NOT = { has_variable = JAP_Sanrizuka_Struggle_hdu }		# CHANGE ****
		
		#Cause of unrest
		ig:ig_trade_unions ?= { is_marginal = no }
		cold_war_ongoing = yes
		any_scope_state = {
			state_region = s:STATE_KANTO
			any_scope_building = {
				is_building_type = building_railway
				OR = { 
					has_active_production_method = pm_small_jet_aircraft
					has_active_production_method = pm_medium_jet_aircraft
					has_active_production_method = pm_large_jet_aircraft
				}
			}
		}
		
    }
	
	immediate = {
	
		#Mark state
		random_scope_state = {
			limit = { state_region = s:STATE_KANTO }
			save_scope_as = terror_attack_state
		}
	
		# Fire only once
		set_variable = JAP_Sanrizuka_Struggle_hdu				# Change variable ****
		
	}
    
    option = {
        name = historical_domestic_unrest.option.1				# Yes
        highlighted_option = yes
		default_option = yes
		
		#Property damage
		random_scope_state = {
			limit = { state_region = s:STATE_KANTO }
			state_region = {
				add_devastation = 10
			}
		}
		
		#Domestic reaction
		add_radicals = {
			value = medium_radicals
			strata = poor
		}
		
		ai_chance = { 
			base = 90 
		}
		
    }
	
	option = {
        name = historical_domestic_unrest.option.2				# No
		
		#Delete airport
		random_scope_state = {
			limit = { state_region = s:STATE_KANTO }
			remove_building = building_railway
		}
		
		#Domestic reaction
		add_radicals = {
			value = small_radicals
			strata = rich
		}
		
		ai_chance = { 
			base = 10 modifier = { trigger = { has_global_variable = historical_railroading_active } add = -100 } 
		}
		
    }

}

# Tokyo subway sarin attack
historical_domestic_unrest.10 = {
    type = country_event
	placement = scope:terror_attack_state

    title = JAP_sarin_attack.t 									# Title of the event; ADD LOCALISATION
    desc = JAP_sarin_attack.d 									# Description of the event; ADD LOCALISATION
    #flavor = JAP_sarin_attack.f 								# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/unspecific_vandalized_storefront.bk2" }

    icon = "gfx/interface/icons/invention_icons/anarchy.dds" 		# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {													# What triggers the event, if using other events or journal entries leave empty
		
		#Overlord conditions
		c:JAP ?= this											# Change TAG of the overlord ****
		game_date >= 1995.5.20									# START DATE: Date colony became self governing ****
		game_date < 2005.5.20									# END DATE: All historical events must not fire 10 years after the START DATE ****
		
		is_a_democracy = yes									# Correct gov types
		is_sufficiently_independent = yes						# is_vassal = no		
		is_at_war = no											# war = no
		
		# Event has not been fired before
		NOT = { has_variable = JAP_sarin_attack_hdu }			# CHANGE ****
		
		#Cause of unrest
		has_state_in_state_region = STATE_KANTO
		ig:ig_devout ?= { is_marginal = yes }
		
    }
	
	immediate = {
	
		#Mark state
		random_scope_state = {
			limit = { state_region = s:STATE_KANTO }
			save_scope_as = terror_attack_state
		}
	
		# Fire only once
		set_variable = JAP_sarin_attack_hdu						# Change variable ****
		
	}
    
    option = {
        name = historical_domestic_unrest.option				# Oh no
		
		#Property damage
		random_scope_state = {
			limit = { state_region = s:STATE_KANTO }
			state_region = {
				add_devastation = 5
			}
		}
		
		#Domestic reaction
		add_radicals = {
			value = medium_radicals
			interest_group = ig:ig_devout
		}
		
		ai_chance = { 
			base = 90 
		}
		
    }
	
}

# 1993 World Trade Center bombing
historical_domestic_unrest.11 = {
    type = country_event
	placement = scope:terror_attack_state

    title = USA_WTC_attack_1993.t 								# Title of the event; ADD LOCALISATION
    desc = USA_WTC_attack_1993.d 								# Description of the event; ADD LOCALISATION
    #flavor = USA_WTC_attack_1993.f 							# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/unspecific_vandalized_storefront.bk2" }

    icon = "gfx/interface/icons/event_icons/event_fire.dds" 		# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {													# What triggers the event, if using other events or journal entries leave empty
		
		#Overlord conditions
		c:USA ?= this											# Change TAG of the overlord ****
		game_date >= 1993.2.26									# START DATE: Date colony became self governing ****
		game_date < 2003.2.26									# END DATE: All historical events must not fire 10 years after the START DATE ****
		
		is_a_democracy = yes									# Correct gov types
		is_sufficiently_independent = yes						# is_vassal = no		
		is_at_war = no											# war = no
		
		# Event has not been fired before
		NOT = { has_variable = USA_WTC_attack_1993_hdu }		# CHANGE ****
		
		#Cause of unrest
		has_state_in_state_region = STATE_NEW_YORK
		any_scope_state = { 
			state_region = s:STATE_NEW_YORK
			has_building = building_skyscraper
		}
		OR = {
			AND = {
				exists = c:AFG
				c:AFG ?= {
					is_a_theocratic_government = yes
				}
			}
			AND = {
				has_global_variable = iraq_kuwait_war_happened
				NOT = { exists = c:KUW }
				exists = c:IRQ
				c:IRQ ?= {
					is_a_nationalist_government = yes
				}
			}
		}
		
    }
	
	immediate = {
	
		#Mark state
		random_scope_state = {
			limit = { state_region = s:STATE_NEW_YORK }
			save_scope_as = terror_attack_state
		}
	
		# Fire only once
		set_variable = USA_WTC_attack_1993_hdu					# Change variable ****
		
	}
    
    option = {
        name = historical_domestic_unrest.option				# Oh no
		
		#Property damage
		random_scope_state = {
			limit = { state_region = s:STATE_NEW_YORK }
			state_region = {
				add_devastation = 5
			}
		}
		
		ai_chance = { 
			base = 90 
		}
		
    }
	
}

# 9/11
historical_domestic_unrest.12 = {
    type = country_event
	placement = scope:terror_attack_state

    title = USA_WTC_attack_2001.t 								# Title of the event; ADD LOCALISATION
    desc = USA_WTC_attack_2001.d 								# Description of the event; ADD LOCALISATION
    #flavor = USA_WTC_attack_2001.f 							# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/unspecific_vandalized_storefront.bk2" }

    icon = "gfx/interface/icons/event_icons/event_fire.dds" 		# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {													# What triggers the event, if using other events or journal entries leave empty
		
		#Overlord conditions
		c:USA ?= this											# Change TAG of the overlord ****
		game_date >= 2001.9.11									# START DATE: Date colony became self governing ****
		game_date < 2011.9.11									# END DATE: All historical events must not fire 10 years after the START DATE ****
		
		is_a_democracy = yes									# Correct gov types
		is_sufficiently_independent = yes						# is_vassal = no		
		is_at_war = no											# war = no
		
		# Event has not been fired before
		NOT = { has_variable = USA_WTC_attack_2001_hdu }		# CHANGE ****
		
		#Cause of unrest
		has_state_in_state_region = STATE_NEW_YORK
		any_scope_state = { 
			state_region = s:STATE_NEW_YORK
			has_building = building_skyscraper
		}
		OR = {
			AND = {
				exists = c:AFG
				c:AFG ?= {
					is_a_theocratic_government = yes
				}
			}
			AND = {
				has_global_variable = iraq_kuwait_war_happened
				NOT = { exists = c:KUW }
				exists = c:IRQ
				c:IRQ ?= {
					is_a_nationalist_government = yes
				}
			}
		}
		
    }
	
	immediate = {
	
		#Mark state
		random_scope_state = {
			limit = { state_region = s:STATE_NEW_YORK }
			save_scope_as = terror_attack_state
		}
	
		# Fire only once
		set_variable = USA_WTC_attack_2001_hdu					# Change variable ****
		
	}
    
    option = {
        name = historical_domestic_unrest.option				# Oh no
		
		#Mark war on terror
		set_global_variable = global_war_on_terror
		
		#Property damage
		random_scope_state = {
			limit = { state_region = s:STATE_NEW_YORK }
			state_region = {
				add_devastation = 10
			}
			remove_building = building_skyscraper
		}
		random_scope_state = {
			limit = { state_region = s:STATE_DISTRICT_OF_COLUMBIA }
			state_region = {
				add_devastation = 5
			}
			remove_building = building_barracks
		}
		
		#Domestic reaction
		add_loyalists = {
			value = medium_radicals
		}
		
		ai_chance = { 
			base = 90 
		}
		
    }
	
}

# 7 July 2005 London bombings
historical_domestic_unrest.13 = {
    type = country_event
	placement = scope:terror_attack_state

    title = GBR_London_attack_2005.t 							# Title of the event; ADD LOCALISATION
    desc = GBR_London_attack_2005.d 							# Description of the event; ADD LOCALISATION
    #flavor = GBR_London_attack_2005.f 							# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/unspecific_vandalized_storefront.bk2" }

    icon = "gfx/interface/icons/event_icons/event_fire.dds" 		# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {													# What triggers the event, if using other events or journal entries leave empty
		
		#Overlord conditions
		c:GBR ?= this											# Change TAG of the overlord ****
		game_date >= 2005.7.7									# START DATE: Date colony became self governing ****
		game_date < 2015.7.7									# END DATE: All historical events must not fire 10 years after the START DATE ****
		
		is_a_democracy = yes									# Correct gov types
		is_sufficiently_independent = yes						# is_vassal = no		
		is_at_war = no											# war = no
		
		# Event has not been fired before
		NOT = { has_variable = GBR_London_attack_2005_hdu }		# CHANGE ****
		
		#Cause of unrest
		has_state_in_state_region = STATE_HOME_COUNTIES
		has_global_variable = global_war_on_terror
		
    }
	
	immediate = {
	
		#Mark state
		random_scope_state = {
			limit = { state_region = s:STATE_HOME_COUNTIES }
			save_scope_as = terror_attack_state
		}
	
		# Fire only once
		set_variable = GBR_London_attack_2005_hdu				# Change variable ****
		
	}
    
    option = {
        name = historical_domestic_unrest.option				# Oh no
		
		#Property damage
		random_scope_state = {
			limit = { state_region = s:STATE_HOME_COUNTIES }
			state_region = {
				add_devastation = 10
			}
		}
		
		#Domestic reaction
		add_loyalists = {
			value = medium_radicals
		}
		
		ai_chance = { 
			base = 90 
		}
		
    }
	
}

# Brighton Hotel Bombing
historical_domestic_unrest.14 = {
    type = country_event
	placement = scope:terror_attack_state

    title = GBR_Brighton_attack_1984.t 							# Title of the event; ADD LOCALISATION
    desc = GBR_Brighton_attack_1984.d 							# Description of the event; ADD LOCALISATION
    #flavor = GBR_Brighton_attack_1984.f 						# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/unspecific_vandalized_storefront.bk2" }

    icon = "gfx/interface/icons/event_icons/event_fire.dds" 		# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {													# What triggers the event, if using other events or journal entries leave empty
		
		#Overlord conditions
		c:GBR ?= this											# Change TAG of the overlord ****
		game_date >= 1984.10.12									# START DATE: Date colony became self governing ****
		game_date < 1994.10.12									# END DATE: All historical events must not fire 10 years after the START DATE ****
		
		is_a_democracy = yes									# Correct gov types
		is_sufficiently_independent = yes						# is_vassal = no		
		is_at_war = no											# war = no
		
		# Event has not been fired before
		NOT = { has_variable = GBR_Brighton_attack_1984_hdu }	# CHANGE ****
		
		#Cause of unrest
		has_state_in_state_region = STATE_HOME_COUNTIES
		exists = c:SIR
		any_scope_state = { state_region = { is_homeland = cu:irish } }
		NAND = {
			exists = c:NIR
			c:NIR ?= { is_subject_of = ROOT }
		}
		
    }
	
	immediate = {
	
		#Mark state
		random_scope_state = {
			limit = { state_region = s:STATE_HOME_COUNTIES }
			save_scope_as = terror_attack_state
		}
	
		# Fire only once
		set_variable = GBR_Brighton_attack_1984_hdu				# Change variable ****
		
	}
    
    option = {
        name = historical_domestic_unrest.option				# Oh no
		
		#Property damage
		random_scope_state = {
			limit = { state_region = s:STATE_HOME_COUNTIES }
			state_region = {
				add_devastation = 10
			}
		}
		
		#Domestic reaction
		add_loyalists = {
			value = medium_radicals
		}
		
		ai_chance = { 
			base = 90 
		}
		
    }
	
}

# Munich Massacre
historical_domestic_unrest.15 = {
    type = country_event
	placement = scope:terror_attack_state

    title = GER_Munich_Massacre_1972.t 							# Title of the event; ADD LOCALISATION
    desc = GER_Munich_Massacre_1972.d 							# Description of the event; ADD LOCALISATION
    #flavor = GER_Munich_Massacre_1972.f 						# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/unspecific_vandalized_storefront.bk2" }

    icon = "gfx/interface/icons/event_icons/event_fire.dds" 		# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {													# What triggers the event, if using other events or journal entries leave empty
		
		#Overlord conditions
		OR = { c:GER ?= this c:WGR ?= this }
		game_date >= 1972.9.5									# START DATE: Date colony became self governing ****
		game_date < 1982.9.5									# END DATE: All historical events must not fire 10 years after the START DATE ****
		
		is_a_democracy = yes									# Correct gov types
		is_sufficiently_independent = yes						# is_vassal = no		
		is_at_war = no											# war = no
		
		# Event has not been fired before
		NOT = { has_variable = GER_Munich_Massacre_1972_hdu }	# CHANGE ****
		
		#Cause of unrest
		has_state_in_state_region = STATE_BAVARIA
		exists = c:ISR
		NOT = { exists = c:PAL }
		any_scope_state = { 
			state_region = s:STATE_BAVARIA
			has_modifier = olympics_host_city
		}
		
    }
	
	immediate = {
	
		#Mark state
		random_scope_state = {
			limit = { state_region = s:STATE_BAVARIA }
			save_scope_as = terror_attack_state
		}
	
		# Fire only once
		set_variable = GER_Munich_Massacre_1972_hdu				# Change variable ****
		
	}
    
    option = {
        name = historical_domestic_unrest.option				# Oh no
		
		#Domestic reaction
		add_loyalists = {
			value = small_radicals
		}
		
		ai_chance = { 
			base = 90 
		}
		
    }
	
}

# 1999 Russian apartment bombings
historical_domestic_unrest.16 = {
    type = country_event
	placement = scope:terror_attack_state

    title = RUS_Moscow_attack_1999.t 							# Title of the event; ADD LOCALISATION
    desc = RUS_Moscow_attack_1999.d 							# Description of the event; ADD LOCALISATION
    #flavor = RUS_Moscow_attack_1999.f 							# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/unspecific_vandalized_storefront.bk2" }

    icon = "gfx/interface/icons/event_icons/event_fire.dds" 		# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {													# What triggers the event, if using other events or journal entries leave empty
		
		#Overlord conditions
		c:RUS ?= this											# Change TAG of the overlord ****
		game_date >= 1999.9.4									# START DATE: Date colony became self governing ****
		game_date < 2009.9.4									# END DATE: All historical events must not fire 10 years after the START DATE ****
		
		is_a_democracy = yes									# Correct gov types
		is_sufficiently_independent = yes						# is_vassal = no		
		is_at_war = no											# war = no
		
		# Event has not been fired before
		NOT = { has_variable = RUS_Moscow_attack_1999_hdu }		# CHANGE ****
		
		#Cause of unrest
		has_state_in_state_region = STATE_MOSCOW
		NOR = {
			exists = c:CHC
			c:CHC ?= { is_subject_of = ROOT }
		}
		
    }
	
	immediate = {
	
		#Mark state
		random_scope_state = {
			limit = { state_region = s:STATE_MOSCOW }
			save_scope_as = terror_attack_state
		}
	
		# Fire only once
		set_variable = RUS_Moscow_attack_1999_hdu				# Change variable ****
		
	}
    
    option = {
        name = historical_domestic_unrest.option				# Oh no
		
		#Property damage
		random_scope_state = {
			limit = { state_region = s:STATE_MOSCOW }
			state_region = {
				add_devastation = 10
			}
		}
		
		#Domestic reaction
		add_loyalists = {
			value = medium_radicals
			culture = cu:russian
		}
		add_radicals = {
			value = large_radicals
			culture = cu:chechen
		}
		
		ai_chance = { 
			base = 90 
		}
		
    }
	
}

# 1993 Bombay bombings
historical_domestic_unrest.17 = {
    type = country_event
	placement = scope:terror_attack_state

    title = HND_Bombay_attack_1993.t 							# Title of the event; ADD LOCALISATION
    desc = HND_Bombay_attack_1993.d 							# Description of the event; ADD LOCALISATION
    #flavor = HND_Bombay_attack_1993.f 							# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/unspecific_vandalized_storefront.bk2" }

    icon = "gfx/interface/icons/event_icons/event_fire.dds" 		# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {													# What triggers the event, if using other events or journal entries leave empty
		
		#Overlord conditions
		c:HND ?= this											# Change TAG of the overlord ****
		game_date >= 1993.3.12									# START DATE: Date colony became self governing ****
		game_date < 2003.3.12									# END DATE: All historical events must not fire 10 years after the START DATE ****
		
		is_a_democracy = yes									# Correct gov types
		is_sufficiently_independent = yes						# is_vassal = no		
		is_at_war = no											# war = no
		
		# Event has not been fired before
		NOT = { has_variable = HND_Bombay_attack_1993_hdu }		# CHANGE ****
		
		#Cause of unrest
		has_state_in_state_region = STATE_BOMBAY
		
    }
	
	immediate = {
	
		#Mark state
		random_scope_state = {
			limit = { state_region = s:STATE_BOMBAY }
			save_scope_as = terror_attack_state
		}
	
		# Fire only once
		set_variable = HND_Bombay_attack_1993_hdu				# Change variable ****
		
	}
    
    option = {
        name = historical_domestic_unrest.option				# Oh no
		
		#Property damage
		random_scope_state = {
			limit = { state_region = s:STATE_BOMBAY }
			state_region = {
				add_devastation = 10
			}
		}
		
		ai_chance = { 
			base = 90 
		}
		
    }
	
}

# 2002 Bali bombings
historical_domestic_unrest.18 = {
    type = country_event
	placement = scope:terror_attack_state

    title = IDO_Bali_attack_2002.t 								# Title of the event; ADD LOCALISATION
    desc = IDO_Bali_attack_2002.d 								# Description of the event; ADD LOCALISATION
    #flavor = IDO_Bali_attack_2002.f 							# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/unspecific_vandalized_storefront.bk2" }

    icon = "gfx/interface/icons/event_icons/event_fire.dds" 		# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {													# What triggers the event, if using other events or journal entries leave empty
		
		#Overlord conditions
		c:IDO ?= this											# Change TAG of the overlord ****
		game_date >= 2002.10.12									# START DATE: Date colony became self governing ****
		game_date < 2012.10.12									# END DATE: All historical events must not fire 10 years after the START DATE ****
		
		is_a_democracy = yes									# Correct gov types
		is_sufficiently_independent = yes						# is_vassal = no		
		is_at_war = no											# war = no
		
		# Event has not been fired before
		NOT = { has_variable = IDO_Bali_attack_2002_hdu }		# CHANGE ****
		
		#Cause of unrest
		has_state_in_state_region = STATE_SUNDA_ISLANDS
		has_global_variable = global_war_on_terror
		
    }
	
	immediate = {
	
		#Mark state
		random_scope_state = {
			limit = { state_region = s:STATE_SUNDA_ISLANDS }
			save_scope_as = terror_attack_state
		}
	
		# Fire only once
		set_variable = IDO_Bali_attack_2002_hdu					# Change variable ****
		
	}
    
    option = {
        name = historical_domestic_unrest.option				# Oh no
		
		#Property damage
		random_scope_state = {
			limit = { state_region = s:STATE_SUNDA_ISLANDS }
			state_region = {
				add_devastation = 10
			}
		}
		
		#Radicalise islamists
		add_radicals = {
			value = very_large_radicals
			interest_group = ig:ig_devout
		}
		
		ai_chance = { 
			base = 90 
		}
		
    }
	
}

# 1995 France bombings
historical_domestic_unrest.19 = {
    type = country_event
	placement = scope:terror_attack_state

    title = FRA_Paris_attack_1995.t 							# Title of the event; ADD LOCALISATION
    desc = FRA_Paris_attack_1995.d 								# Description of the event; ADD LOCALISATION
    #flavor = FRA_Paris_attack_1995.f 							# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/unspecific_vandalized_storefront.bk2" }

    icon = "gfx/interface/icons/event_icons/event_fire.dds" 		# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {													# What triggers the event, if using other events or journal entries leave empty
		
		#Overlord conditions
		c:FRA ?= this											# Change TAG of the overlord ****
		game_date >= 1995.7.25									# START DATE: Date colony became self governing ****
		game_date < 2005.7.25									# END DATE: All historical events must not fire 10 years after the START DATE ****
		
		is_a_democracy = yes									# Correct gov types
		is_sufficiently_independent = yes						# is_vassal = no		
		is_at_war = no											# war = no
		
		# Event has not been fired before
		NOT = { has_variable = FRA_Paris_attack_1995_hdu }		# CHANGE ****
		
		#Cause of unrest
		has_state_in_state_region = STATE_ILE_DE_FRANCE
		exists = c:ALG
		c:ALG ?= {
			has_variable = Algerian_Civil_War_1992
			is_at_war = yes
		}
		
    }
	
	immediate = {
	
		#Mark state
		random_scope_state = {
			limit = { state_region = s:STATE_ILE_DE_FRANCE }
			save_scope_as = terror_attack_state
		}
	
		# Fire only once
		set_variable = FRA_Paris_attack_1995_hdu				# Change variable ****
		
	}
    
    option = {
        name = historical_domestic_unrest.option				# Oh no
		
		#Property damage
		random_scope_state = {
			limit = { state_region = s:STATE_ILE_DE_FRANCE }
			state_region = {
				add_devastation = 10
			}
		}
		
		#Radicalise islamists
		add_radicals = {
			value = very_large_radicals
			religion = rel:sunni
		}
		
		ai_chance = { 
			base = 90 
		}
		
    }
	
}

# 1995 Oklahoma City bombing
historical_domestic_unrest.20 = {
    type = country_event
	placement = scope:terror_attack_state

    title = USA_Oklahoma_attack_1995.t 							# Title of the event; ADD LOCALISATION
    desc = USA_Oklahoma_attack_1995.d 							# Description of the event; ADD LOCALISATION
    #flavor = USA_Oklahoma_attack_1995.f 						# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/unspecific_vandalized_storefront.bk2" }

    icon = "gfx/interface/icons/event_icons/event_fire.dds" 		# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {													# What triggers the event, if using other events or journal entries leave empty
		
		#Overlord conditions
		c:USA ?= this											# Change TAG of the overlord ****
		game_date >= 1995.4.19									# START DATE: Date colony became self governing ****
		game_date < 2005.4.19									# END DATE: All historical events must not fire 10 years after the START DATE ****
		
		is_a_democracy = yes									# Correct gov types
		is_sufficiently_independent = yes						# is_vassal = no		
		is_at_war = no											# war = no
		
		# Event has not been fired before
		NOT = { has_variable = USA_Oklahoma_attack_1995_hdu }	# CHANGE ****
		
		#Cause of unrest
		has_state_in_state_region = STATE_OKLAHOMA
		any_scope_state = { 
			state_region = s:STATE_OKLAHOMA
			has_building = building_skyscraper
		}
		NOT = { has_journal_entry = je_apartheid }
		
    }
	
	immediate = {
	
		#Mark state
		random_scope_state = {
			limit = { state_region = s:STATE_OKLAHOMA }
			save_scope_as = terror_attack_state
		}
	
		# Fire only once
		set_variable = USA_Oklahoma_attack_1995_hdu				# Change variable ****
		
	}
    
    option = {
        name = historical_domestic_unrest.option				# Oh no
		
		#Property damage
		random_scope_state = {
			limit = { state_region = s:STATE_OKLAHOMA }
			state_region = {
				add_devastation = 10
			}
			remove_building = building_skyscraper
		}
		
		#Radicalise white extremists
		add_radicals = {
			value = very_large_radicals
			interest_group = ig:ig_devout
		}
		
		ai_chance = { 
			base = 90 
		}
		
    }
	
}