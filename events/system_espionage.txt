namespace = espionage_system

#Instigate Domestic Unrest - TARGET
espionage_system.2 = {
    type = country_event

    title = espionage_instigate_domestic_unrest_target.t 			# Title of the event; ADD LOCALISATION
    desc = espionage_instigate_domestic_unrest_target.d 			# Description of the event; ADD LOCALISATION
    flavor = espionage_instigate_domestic_unrest_target.f 			# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/europenorthamerica_political_extremism.bk2" }

    icon = "gfx/interface/icons/invention_icons/anarchy.dds" 		# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {														# What triggers the event, if using other events or journal entries leave empty
		
		#Triggered by previous event
		
    }
	
	immediate = {
	
		save_scope_as = espionage_victim
	
		#Guess the identity of attacker
		random_country = {
			limit = {
			
				NOT = { THIS = ROOT }
			
				#THIS is conducting hostile espionage in TARGET
				has_variable = espionage_attacker_var
				
			}
			save_scope_as = suspected_espionage_attacker
			
			remove_variable = espionage_attacker_var
		}
		
		#Anger in incorporated states
		every_scope_state = {
			limit = { is_incorporated = yes }
			add_modifier = { name = domestic_unrest months = 3 is_decaying = yes }
		}
		
	}
    
    option = {
        name = espionage_system_response.option.1			# Angry reaction!
        highlighted_option = yes
		
		#THIS is angry with FROM!
		change_relations = {
			country = scope:suspected_espionage_attacker
			value = -50
		}
		
		ai_chance = { 
			base = 90 
			
			#AI is more likely to kick up a fuss
			modifier = { trigger = { is_neutral = yes } add = -50 }
			modifier = { trigger = { NOT = { has_jingoistic_ruler = yes } } add = -50 }
		}
		
    }
	
	option = {
        name = espionage_system_response.option.2			# Tolerate it
		default_option = yes
		
		#Add embarassment
		if = {
			limit = { NOT = { has_modifier = embarassed_by_espionage } }
			add_modifier = { name = embarassed_by_espionage months = 3 is_decaying = yes }
		}
		
		ai_chance = { 
			base = 10
		}
		
    }

}

#Conduct Economic Sabotage - TARGET
espionage_system.4 = {
    type = country_event

    title = espionage_conduct_economic_sabotage_target.t 			# Title of the event; ADD LOCALISATION
    desc = espionage_conduct_economic_sabotage_target.d 			# Description of the event; ADD LOCALISATION
    flavor = espionage_conduct_economic_sabotage_target.f 			# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/unspecific_vandalized_storefront.bk2" }

    icon = "gfx/interface/icons/invention_icons/political_agitation.dds" 	# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 			# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {													# What triggers the event, if using other events or journal entries leave empty
		
		#Triggered by previous event
		
    }
	
	immediate = {
	
		save_scope_as = espionage_victim
	
		#Guess the identity of attacker
		random_country = {
			limit = {
			
				NOT = { THIS = ROOT }
			
				#THIS is conducting hostile espionage in TARGET
				has_variable = espionage_attacker_var
				
			}
			save_scope_as = suspected_espionage_attacker
			
			remove_variable = espionage_attacker_var
		}
		
		#Stifle industry for a while
		every_scope_state = {
			add_modifier = { name = economic_sabotage months = 3 is_decaying = yes }
		}
		
	}
    
    option = {
        name = espionage_system_response.option.1			# Angry reaction!
        highlighted_option = yes
		
		#THIS is angry with FROM!
		change_relations = {
			country = scope:suspected_espionage_attacker
			value = -50
		}
		
		ai_chance = { 
			base = 90 
			
			#AI is more likely to kick up a fuss
			modifier = { trigger = { is_neutral = yes } add = -50 }
			modifier = { trigger = { NOT = { has_jingoistic_ruler = yes } } add = -50 }
		}
		
    }
	
	option = {
        name = espionage_system_response.option.2			# Tolerate it
		default_option = yes
		
		#Add embarassment
		if = {
			limit = { NOT = { has_modifier = embarassed_by_espionage } }
			add_modifier = { name = embarassed_by_espionage months = 3 is_decaying = yes }
		}
		
		ai_chance = { 
			base = 10
		}
		
    }

}

#Instigate Secessionist Movement - TARGET
espionage_system.6 = {
    type = country_event

    title = espionage_instigate_secessionist_movement_target.t 			# Title of the event; ADD LOCALISATION
    desc = espionage_instigate_secessionist_movement_target.d 			# Description of the event; ADD LOCALISATION
    flavor = espionage_instigate_secessionist_movement_target.f 		# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/asia_sepoy_mutiny.bk2" }

    icon = "gfx/interface/icons/invention_icons/nationalism.dds" 	# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {														# What triggers the event, if using other events or journal entries leave empty
		
		#Triggered by previous event
		
    }
	
	immediate = {
	
		save_scope_as = espionage_victim
	
		#Guess the identity of attacker
		random_country = {
			limit = {
			
				NOT = { THIS = ROOT }
			
				#THIS is conducting hostile espionage in TARGET
				has_variable = espionage_attacker_var
				
			}
			save_scope_as = suspected_espionage_attacker
			
			remove_variable = espionage_attacker_var
		}
		
		#Anger in unincorporated states
		every_scope_state = {
			limit = { is_incorporated = no }
			add_modifier = { name = nationalist_agitation months = 3 is_decaying = yes }
		}
		
	}
    
    option = {
        name = espionage_system_response.option.1			# Angry reaction!
        highlighted_option = yes
		
		#THIS is angry with FROM!
		change_relations = {
			country = scope:suspected_espionage_attacker
			value = -50
		}
		
		ai_chance = { 
			base = 90 
			
			#AI is more likely to kick up a fuss
			modifier = { trigger = { is_neutral = yes } add = -50 }
			modifier = { trigger = { NOT = { has_jingoistic_ruler = yes } } add = -50 }
		}
		
    }
	
	option = {
        name = espionage_system_response.option.2			# Tolerate it
		default_option = yes
		
		#Add embarassment
		if = {
			limit = { NOT = { has_modifier = embarassed_by_espionage } }
			add_modifier = { name = embarassed_by_espionage months = 3 is_decaying = yes }
		}
		
		ai_chance = { 
			base = 10
		}
		
    }

}

#Election Interference - TARGET
espionage_system.8 = {
    type = country_event

    title = espionage_election_interference_target.t 			# Title of the event; ADD LOCALISATION
    desc = espionage_election_interference_target.d 			# Description of the event; ADD LOCALISATION
    flavor = espionage_election_interference_target.f 			# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/southamerica_election.bk2" }

    icon = "gfx/interface/icons/event_icons/event_protest.dds" 	# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {													# What triggers the event, if using other events or journal entries leave empty
		
		#Triggered by previous event
		
    }
	
	immediate = {
	
		save_scope_as = espionage_victim
	
		#Guess the identity of attacker
		random_country = {
			limit = {
			
				NOT = { THIS = ROOT }
			
				#THIS is conducting hostile espionage in TARGET
				has_variable = espionage_attacker_var
				
			}
			save_scope_as = suspected_espionage_attacker
			
			remove_variable = espionage_attacker_var
		}
		
		#Reduce momentum of ruling party
		random_active_party = { 
			limit = { 
				any_member = { is_in_government = yes } 
			}
			add_momentum = momentum_small_decrease
		}
		
	}
    
    option = {
        name = espionage_system_response.option.1			# Angry reaction!
        highlighted_option = yes
		
		#THIS is angry with FROM!
		change_relations = {
			country = scope:suspected_espionage_attacker
			value = -50
		}
		
		ai_chance = { 
			base = 90 
			
			#AI is more likely to kick up a fuss
			modifier = { trigger = { is_neutral = yes } add = -50 }
			modifier = { trigger = { NOT = { has_jingoistic_ruler = yes } } add = -50 }
		}
		
    }
	
	option = {
        name = espionage_system_response.option.2			# Tolerate it
		default_option = yes
		
		#Add embarassment
		if = {
			limit = { NOT = { has_modifier = embarassed_by_espionage } }
			add_modifier = { name = embarassed_by_espionage months = 3 is_decaying = yes }
		}
		
		ai_chance = { 
			base = 10
		}
		
    }

}

#Terror Attack - TARGET
espionage_system.10 = {
    type = country_event
	placement = scope:terror_attack_state

    title = espionage_terror_attack_target.t 					# Title of the event; ADD LOCALISATION
    desc = espionage_terror_attack_target.d 					# Description of the event; ADD LOCALISATION
    flavor = espionage_terror_attack_target.f 					# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/unspecific_fire.bk2" }

    icon = "gfx/interface/icons/event_icons/event_fire.dds" 	# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {													# What triggers the event, if using other events or journal entries leave empty
		
		#Triggered by previous event
		
    }
	
	immediate = {
	
		save_scope_as = espionage_victim
	
		#Guess the identity of attacker
		random_country = {
			limit = {
			
				NOT = { THIS = ROOT }
			
				#THIS is conducting hostile espionage in TARGET
				has_variable = espionage_attacker_var
				
			}
			save_scope_as = suspected_espionage_attacker
			
			remove_variable = espionage_attacker_var
		}
		
		#Select a random state to attack
		random_scope_state = {
			limit = { is_incorporated = yes }
			state_region = {
				add_devastation = 10
			}
			save_scope_as = terror_attack_state
		}
		
	}
    
    option = {
        name = espionage_system_response.option.1			# Angry reaction!
        highlighted_option = yes
		
		#THIS is angry with FROM!
		change_relations = {
			country = scope:suspected_espionage_attacker
			value = -50
		}
		
		ai_chance = { 
			base = 90 
			
			#AI is more likely to kick up a fuss
			modifier = { trigger = { is_neutral = yes } add = -50 }
			modifier = { trigger = { NOT = { has_jingoistic_ruler = yes } } add = -50 }
		}
		
    }
	
	option = {
        name = espionage_system_response.option.2			# Tolerate it
		default_option = yes
		
		#Add embarassment
		if = {
			limit = { NOT = { has_modifier = embarassed_by_espionage } }
			add_modifier = { name = embarassed_by_espionage months = 3 is_decaying = yes }
		}
		
		ai_chance = { 
			base = 10
		}
		
    }

}