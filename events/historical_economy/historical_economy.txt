namespace = historical_economy

# Recession of 1950
historical_economy.1 = {
    type = country_event

    title = 1950_recession.t 							# Title of the event; ADD LOCALISATION
    desc = 1950_recession.d 							# Description of the event; ADD LOCALISATION
    flavor = 1950_recession.f 							# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/europenorthamerica_rich_and_poor.bk2" }

    icon = "gfx/interface/icons/invention_icons/macroeconomics.dds" 	# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {													# What triggers the event, if using other events or journal entries leave empty
		
		is_player = yes
		game_date >= 1950.1.1									# START DATE: Date colony became self governing ****
		game_date < 1951.1.1									# END DATE: All historical events must not fire 10 years after the START DATE ****
		
		# Event has not been fired before
		NOT = { has_variable = 1950_recession_hee }				# CHANGE ****
		
    }
	
	immediate = {
	
		# Fire only once
		set_variable = 1950_recession_hee						# Change variable ****
		
	}
    
    option = {
        name = historical_economy.1								# Interesting
		
    }

}

# End of the Bretton Woods System
historical_economy.2 = {
    type = country_event

    title = 1971_bretton_woods_system.t 						# Title of the event; ADD LOCALISATION
    desc = 1971_bretton_woods_system.d 							# Description of the event; ADD LOCALISATION
    flavor = 1971_bretton_woods_system.f 						# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/unspecific_factory_closed.bk2" }

    icon = "gfx/interface/icons/invention_icons/macroeconomics.dds" 	# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {													# What triggers the event, if using other events or journal entries leave empty
		exists = c:USA this = c:USA
		has_journal_entry = je_bretton_woods_system_leader
		
		game_date >= 1971.8.15									# START DATE: Date colony became self governing ****
		game_date < 1981.8.15									# END DATE: All historical events must not fire 10 years after the START DATE ****
		
		# Event has not been fired before
		NOT = { has_variable = 1971_bretton_woods_system_hee }			# CHANGE ****
		
    }
	
	immediate = {
	
		# Fire only once
		set_variable = 1971_bretton_woods_system_hee					# Change variable ****
		
	}
    
    option = {
        name = 1971_bretton_woods_system.1								# End the system
		
		activate_law = law_type:law_fiat_standard
		
		ai_chance = { 
			base = 90 
		}
    }
	
	option = {
        name = 1971_bretton_woods_system.2								# Leave it be
		
		if = { limit = { NOT = { has_modifier = economic_cycle_1 } } add_modifier = { name = economic_cycle_1 } }
		if = { limit = { has_modifier = economic_cycle_2 } remove_modifier = economic_cycle_2 }
		if = { limit = { has_modifier = economic_cycle_3 } remove_modifier = economic_cycle_3 }
		if = { limit = { has_modifier = economic_cycle_4 } remove_modifier = economic_cycle_4 }
		if = { limit = { has_modifier = economic_cycle_5 } remove_modifier = economic_cycle_5 }
		
		ai_chance = { 
			base = 10 modifier = { trigger = { has_global_variable = historical_railroading_active } add = -100 } 
		}
    }

}

# Year 2000
historical_economy.3 = {
    type = country_event

    title = 2000_new_year.t 							# Title of the event; ADD LOCALISATION
    desc = 2000_new_year.d 								# Description of the event; ADD LOCALISATION
    flavor = 2000_new_year.f 							# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/unspecific_world_fair.bk2" }

    icon = "gfx/interface/icons/event_icons/event_newspaper.dds" 	# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {													# What triggers the event, if using other events or journal entries leave empty
		game_date >= 2000.1.1									# START DATE: Date colony became self governing ****
		game_date < 2001.1.1									# END DATE: All historical events must not fire 10 years after the START DATE ****
		
		# Event has not been fired before
		NOT = { has_variable = 2000_new_year_hee }				# CHANGE ****
		
    }
	
	immediate = {
	
		# Fire only once
		set_variable = 2000_new_year_hee						# Change variable ****
		
	}
    
    option = {
        name = historical_economy_2000.1							# Interesting
		
		#Dot Com boom
		every_scope_culture = {
			add_cultural_obsession = telecommunications
			add_cultural_obsession = computers
		}
		
    }

}

# Socialism with X Characteristics
historical_economy.4 = {
    type = country_event

    title = communist_economic_liberalisation.t 					# Title of the event; ADD LOCALISATION
    desc = communist_economic_liberalisation.d 						# Description of the event; ADD LOCALISATION
    flavor = communist_economic_liberalisation.f 					# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/southamerica_factory_opening.bk2" }

    icon = "gfx/interface/icons/invention_icons/macroeconomics.dds" 	# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {													# What triggers the event, if using other events or journal entries leave empty
		
		OR = { 
			has_law = law_type:law_command_economy
			has_law = law_type:law_semi_command_economy
		}
		
		is_a_communist_government = yes							# Correct gov types
		is_sufficiently_independent = yes						# is_vassal = no
		
		#1980s onwards only OR Cold War is over
		OR = {
		
			AND = {
				has_technology_researched = tech_economy_5
				NOT = { 
					any_country = {
						country_rank = rank_value:super_power
						is_a_communist_government = yes
						has_law = law_type:law_command_economy
					}
				}
			}
			
			AND = {
				has_global_variable = historical_railroading_active
				NOT = { cold_war_ongoing = yes }
			}
			
		}
		
		#Historical OR generic conditions
		OR = {
			AND = { 
				OR = { c:PRC ?= this c:CHI ?= this }
				game_date >= 1992.1.18
				game_date < 2002.1.18
			}
			AND = { 
				OR = { c:DAI ?= this c:NVM ?= this }
				game_date >= 1992.1.1
				game_date < 2002.1.1
			}
			AND = { 
				c:CUB ?= this
				game_date >= 2018.1.1
				game_date < 2028.1.1
			}
			has_healthy_economy = no
			in_default = yes
		}
		
		# Event has not been fired before
		NOT = { has_variable = communist_economic_liberalisation_hee }				# CHANGE ****
		
    }
	
	immediate = {
	
		# Fire only once
		set_variable = communist_economic_liberalisation_hee						# Change variable ****
		
	}
	
	option = {
        name = historical_economy_communist.option.1				# Accept
        highlighted_option = yes
		
		#Enact new regime
		effect_starting_politics_economic_policy_state_capitalism = yes
		
		ai_chance = { 
			base = 90 
		}
		
    }
	
	option = {
        name = historical_economy_communist.option.2				# Reject
		default_option = yes
		
		#Major discontent
		add_radicals = {
			value = very_large_radicals
			strata = rich
		}
		add_radicals = {
			value = very_large_radicals
			strata = middle
		}
		add_modifier = { 
			name = stirrings_of_revolution
			months = 60 
			is_decaying = yes 
		}
		
		ai_chance = { 
			base = 10 modifier = { trigger = { has_global_variable = historical_railroading_active } add = -100 } 
		}
		
    }

}

# Kosygin Reforms
historical_economy.5 = {
    type = country_event

    title = SOV_Kosygin_Reforms.t 							# Title of the event; ADD LOCALISATION
    desc = SOV_Kosygin_Reforms.d 							# Description of the event; ADD LOCALISATION
    #flavor = SOV_Kosygin_Reforms.f 						# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/southamerica_factory_opening.bk2" }

    icon = "gfx/interface/icons/invention_icons/macroeconomics.dds" 	# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {													# What triggers the event, if using other events or journal entries leave empty
		
		#Overlord conditions
		exists = c:SOV
		this = c:SOV											# Change TAG of the overlord ****
		game_date >= 1965.1.1									# START DATE: Date colony became self governing ****
		game_date < 1975.1.1									# END DATE: All historical events must not fire 10 years after the START DATE ****
		
		is_a_communist_government = yes							# Correct gov types
		is_sufficiently_independent = yes						# is_vassal = no		
		is_at_war = no											# war = no
		
		has_law = law_type:law_command_economy
		
		# Event has not been fired before
		NOT = { has_variable = SOV_Kosygin_Reforms_hee }		# CHANGE ****
		
    }
	
	immediate = {
	
		# Fire only once
		set_variable = SOV_Kosygin_Reforms_hee					# Change variable ****
		
	}
    
    option = {
        name = historical_gov_changes.option.1					# Accept
        highlighted_option = yes
		
		#Enact new regime
		activate_law = law_type:law_semi_command_economy
		
		ai_chance = { 
			base = 90 
		}
		
    }
	
	option = {
        name = historical_gov_changes.option.2					# Reject
		default_option = yes
		
		#Major discontent
		add_radicals = {
			value = large_radicals
			strata = poor
		}
		
		ai_chance = { 
			base = 10 modifier = { trigger = { has_global_variable = historical_railroading_active } add = -100 } 
		}
		
    }

}

# European Economic Community
historical_economy.6 = {
    type = country_event

    title = European_Economic_Community.t 						# Title of the event; ADD LOCALISATION
    desc = European_Economic_Community.d 						# Description of the event; ADD LOCALISATION
    #flavor = European_Economic_Community.f 					# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/unspecific_signed_contract.bk2" }

    icon = "gfx/interface/icons/invention_icons/macroeconomics.dds" 	# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {													# What triggers the event, if using other events or journal entries leave empty
		
		#Overlord conditions
		has_variable = XEU_ambitions							# Change TAG of the overlord ****
		game_date >= 1957.3.25									# START DATE: Date colony became self governing ****
		game_date < 1975.3.25									# END DATE: All historical events must not fire 10 years after the START DATE ****
		
		is_a_democracy = yes
		is_sufficiently_independent = yes						# is_vassal = no		
		is_at_war = no											# war = no
		
		has_journal_entry = je_superstate_system
		
		# Event has not been fired before
		NOT = { has_variable = European_Economic_Community_hee }	# CHANGE ****
		
    }
	
	immediate = {
	
		# Fire only once
		set_variable = European_Economic_Community_hee				# Change variable ****
		
	}
    
    option = {
        name = historical_gov_changes.option.1					# Accept
        highlighted_option = yes
		
		#Join Superstate EEC
		set_variable = superstate_free_trade_zone
		create_superstate_free_trade_zone = yes
		
		ai_chance = { 
			base = 90 
		}
		
    }
	
	option = {
        name = historical_gov_changes.option.2					# Reject
		default_option = yes
		
		#Major discontent
		add_radicals = {
			value = medium_radicals
			strata = rich
		}
		add_radicals = {
			value = small_radicals
			strata = middle
		}
		
		ai_chance = { 
			base = 10 modifier = { trigger = { has_global_variable = historical_railroading_active } add = -100 } 
		}
		
    }

}

# European Single Market
historical_economy.7 = {
    type = country_event

    title = European_Single_Market.t 						# Title of the event; ADD LOCALISATION
    desc = European_Single_Market.d 						# Description of the event; ADD LOCALISATION
    #flavor = European_Single_Market.f 						# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/unspecific_signed_contract.bk2" }

    icon = "gfx/interface/icons/invention_icons/macroeconomics.dds" 	# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {													# What triggers the event, if using other events or journal entries leave empty
		
		#Overlord conditions
		has_variable = XEU_ambitions							# Change TAG of the overlord ****
		game_date >= 1993.1.1									# START DATE: Date colony became self governing ****
		game_date < 2003.1.1									# END DATE: All historical events must not fire 10 years after the START DATE ****
		
		is_a_democracy = yes
		is_sufficiently_independent = yes						# is_vassal = no		
		is_at_war = no											# war = no
		
		has_journal_entry = je_superstate_system
		has_variable = superstate_free_trade_zone
		
		# Event has not been fired before
		NOT = { has_variable = European_Single_Market_hee }		# CHANGE ****
		
    }
	
	immediate = {
	
		# Fire only once
		set_variable = European_Single_Market_hee				# Change variable ****
		
	}
    
    option = {
        name = historical_gov_changes.option.1					# Accept
        highlighted_option = yes
		
		#Join Superstate Customs Union
		set_variable = superstate_customs_union
		create_superstate_customs_union = yes
		
		ai_chance = { 
			base = 90 
		}
		
    }
	
	option = {
        name = historical_gov_changes.option.2					# Reject
		default_option = yes
		
		#Major discontent
		add_radicals = {
			value = medium_radicals
			strata = rich
		}
		add_radicals = {
			value = small_radicals
			strata = middle
		}
		
		ai_chance = { 
			base = 10 modifier = { trigger = { has_global_variable = historical_railroading_active } add = -100 } 
		}
		
    }

}

# European Single Currency
historical_economy.8 = {
    type = country_event

    title = European_Single_Currency.t 						# Title of the event; ADD LOCALISATION
    desc = European_Single_Currency.d 						# Description of the event; ADD LOCALISATION
    #flavor = European_Single_Currency.f 					# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/unspecific_signed_contract.bk2" }

    icon = "gfx/interface/icons/invention_icons/macroeconomics.dds" 	# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {													# What triggers the event, if using other events or journal entries leave empty
		
		#Overlord conditions
		has_variable = XEU_ambitions							# Change TAG of the overlord ****
		game_date >= 1999.1.1									# START DATE: Date colony became self governing ****
		game_date < 2009.1.1									# END DATE: All historical events must not fire 10 years after the START DATE ****
		
		is_a_democracy = yes
		is_sufficiently_independent = yes						# is_vassal = no		
		is_at_war = no											# war = no
		
		has_journal_entry = je_superstate_system
		has_variable = superstate_customs_union
		
		# Event has not been fired before
		NOT = { has_variable = European_Single_Currency_hee }	# CHANGE ****
		
    }
	
	immediate = {
	
		# Fire only once
		set_variable = European_Single_Currency_hee				# Change variable ****
		
	}
    
    option = {
        name = historical_gov_changes.option.1					# Accept
        highlighted_option = yes
		
		#Join Superstate Currency Union
		set_variable = superstate_currency_union
		create_superstate_currency_union = yes
		
		ai_chance = { 
			base = 90 modifier = { trigger = { OR = { c:GBR ?= this c:DEN ?= this } has_global_variable = historical_railroading_active } add = -100 }
		}
		
    }
	
	option = {
        name = historical_gov_changes.option.2					# Reject
		default_option = yes
		
		#Major discontent
		add_radicals = {
			value = medium_radicals
			strata = rich
		}
		add_radicals = {
			value = small_radicals
			strata = middle
		}
		
		ai_chance = { 
			base = 10 modifier = { trigger = { NOR = { c:GBR ?= this c:DEN ?= this } has_global_variable = historical_railroading_active } add = -100 } 
		}
		
    }

}

# European Political Union
historical_economy.9 = {
    type = country_event

    title = European_Political_Union.t 						# Title of the event; ADD LOCALISATION
    desc = European_Political_Union.d 						# Description of the event; ADD LOCALISATION
    #flavor = European_Political_Union.f 					# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/unspecific_signed_contract.bk2" }

    icon = "gfx/interface/icons/invention_icons/macroeconomics.dds" 	# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {													# What triggers the event, if using other events or journal entries leave empty
		
		#Overlord conditions
		has_variable = XEU_ambitions							# Change TAG of the overlord ****
		game_date >= 2009.12.1									# START DATE: Date colony became self governing ****
		game_date < 2019.12.1									# END DATE: All historical events must not fire 10 years after the START DATE ****
		
		is_a_democracy = yes
		is_sufficiently_independent = yes						# is_vassal = no		
		is_at_war = no											# war = no
		
		has_journal_entry = je_superstate_system
		has_variable = superstate_customs_union
		
		# Event has not been fired before
		NOT = { has_variable = European_Political_Union_hee }	# CHANGE ****
		
    }
	
	immediate = {
	
		# Fire only once
		set_variable = European_Political_Union_hee				# Change variable ****
		
	}
    
    option = {
        name = historical_gov_changes.option.1					# Accept
        highlighted_option = yes
		
		#Join Superstate Political Union
		set_variable = superstate_political_union
		harmonise_superstate_member_law = yes
		
		ai_chance = { 
			base = 90
		}
		
    }
	
	option = {
        name = historical_gov_changes.option.2					# Reject
		default_option = yes
		
		#Major discontent
		add_radicals = {
			value = medium_radicals
			strata = rich
		}
		add_radicals = {
			value = small_radicals
			strata = middle
		}
		
		ai_chance = { 
			base = 10 modifier = { trigger = { has_global_variable = historical_railroading_active } add = -100 }
		}
		
    }

}

# NAFTA
historical_economy.10 = {
    type = country_event

    title = NAFTA.t 											# Title of the event; ADD LOCALISATION
    desc = NAFTA.d 												# Description of the event; ADD LOCALISATION
    #flavor = NAFTA.f 											# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/unspecific_signed_contract.bk2" }

    icon = "gfx/interface/icons/invention_icons/macroeconomics.dds" # Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {													# What triggers the event, if using other events or journal entries leave empty
		
		#Overlord conditions
		has_variable = XNA_ambitions							# Change TAG of the overlord ****
		game_date >= 1994.1.1									# START DATE: Date colony became self governing ****
		game_date < 2004.1.1									# END DATE: All historical events must not fire 10 years after the START DATE ****
		
		is_a_democracy = yes
		is_sufficiently_independent = yes						# is_vassal = no		
		is_at_war = no											# war = no
		
		has_journal_entry = je_superstate_system
		
		# Event has not been fired before
		NOT = { has_variable = NAFTA_hee }						# CHANGE ****
		
    }
	
	immediate = {
	
		# Fire only once
		set_variable = NAFTA_hee								# Change variable ****
		
	}
    
    option = {
        name = historical_gov_changes.option.1					# Accept
        highlighted_option = yes
		
		#Join Superstate EEC
		set_variable = superstate_free_trade_zone
		create_superstate_free_trade_zone = yes
		
		ai_chance = { 
			base = 90 
		}
		
    }
	
	option = {
        name = historical_gov_changes.option.2					# Reject
		default_option = yes
		
		#Major discontent
		add_radicals = {
			value = medium_radicals
			strata = rich
		}
		add_radicals = {
			value = small_radicals
			strata = middle
		}
		
		ai_chance = { 
			base = 10 modifier = { trigger = { has_global_variable = historical_railroading_active } add = -100 } 
		}
		
    }

}

# ASEAN Economic Community
historical_economy.11 = {
    type = country_event

    title = ASEAN_Economic_Community.t 							# Title of the event; ADD LOCALISATION
    desc = ASEAN_Economic_Community.d 							# Description of the event; ADD LOCALISATION
    #flavor = ASEAN_Economic_Community.f 						# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/unspecific_signed_contract.bk2" }

    icon = "gfx/interface/icons/invention_icons/macroeconomics.dds" # Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {													# What triggers the event, if using other events or journal entries leave empty
		
		#Overlord conditions
		has_variable = XSE_ambitions							# Change TAG of the overlord ****
		game_date >= 2015.1.1									# START DATE: Date colony became self governing ****
		game_date < 2025.1.1									# END DATE: All historical events must not fire 10 years after the START DATE ****
		
		is_some_kind_of_democracy = yes
		is_sufficiently_independent = yes						# is_vassal = no		
		is_at_war = no											# war = no
		
		has_journal_entry = je_superstate_system
		
		# Event has not been fired before
		NOT = { has_variable = ASEAN_Economic_Community_hee }	# CHANGE ****
		
    }
	
	immediate = {
	
		# Fire only once
		set_variable = ASEAN_Economic_Community_hee				# Change variable ****
		
	}
    
    option = {
        name = historical_gov_changes.option.1					# Accept
        highlighted_option = yes
		
		#Join Superstate EEC
		set_variable = superstate_free_trade_zone
		create_superstate_free_trade_zone = yes
		
		ai_chance = { 
			base = 90 
		}
		
    }
	
	option = {
        name = historical_gov_changes.option.2					# Reject
		default_option = yes
		
		#Major discontent
		add_radicals = {
			value = medium_radicals
			strata = rich
		}
		add_radicals = {
			value = small_radicals
			strata = middle
		}
		
		ai_chance = { 
			base = 10 modifier = { trigger = { has_global_variable = historical_railroading_active } add = -100 } 
		}
		
    }

}

# Trans-Pacific Partnership / CPTPP
historical_economy.12 = {
    type = country_event

    title = Trans_Pacific_Partnership.t 						# Title of the event; ADD LOCALISATION
    desc = Trans_Pacific_Partnership.d 							# Description of the event; ADD LOCALISATION
    #flavor = Trans_Pacific_Partnership.f 						# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/unspecific_signed_contract.bk2" }

    icon = "gfx/interface/icons/invention_icons/macroeconomics.dds" # Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {													# What triggers the event, if using other events or journal entries leave empty
		
		# Event has not been fired before
		NOT = { has_variable = Trans_Pacific_Partnership_hee }	# CHANGE ****
		
		#Member conditions
		OR = { 
			has_variable = XNA_ambitions
			has_variable = XEA_ambitions
			has_variable = XSE_ambitions
			has_variable = XPI_ambitions
		}
		NOT = { country_is_in_india = yes }
		game_date >= 2016.2.4									# START DATE: Date colony became self governing ****
		game_date < 2026.2.4									# END DATE: All historical events must not fire 10 years after the START DATE ****
		
		is_some_kind_of_democracy = yes
		is_sufficiently_independent = yes						# is_vassal = no		
		is_at_war = no											# war = no
		
		#USA was the creator
		exists = c:USA
		c:USA = {
			is_a_democracy = yes
			is_sufficiently_independent = yes
			is_at_war = no
			country_rank = rank_value:super_power
			any_interest_group = { 
				OR = { 
					leader = { is_ruler = yes }
					is_in_government = yes
				}
				law_stance = {
					law = law_type:law_free_trade
					value > neutral
				}
			}
		}
		OR = {
			c:USA ?= { has_variable = is_TPP_leader }
			c:USA ?= this
		}
		
    }
	
	immediate = {
	
		# Fire only once
		set_variable = Trans_Pacific_Partnership_hee			# Change variable ****
		
	}
    
    option = {
        name = historical_gov_changes.option.1					# Accept
        highlighted_option = yes
		
		#Join Superstate EEC
		if = {
			limit = { has_journal_entry = je_superstate_system }
			set_variable = superstate_free_trade_zone
			create_superstate_free_trade_zone = yes
		}
		
		#If USA
		if = {
			limit = { c:USA ?= this }
			set_variable = is_TPP_leader
		}
		
		#Free Trade Pact with USA
		if = {
			limit = { 
				c:USA = {
					has_variable = is_TPP_leader
					any_interest_group = { 
						OR = { 
							leader = { is_ruler = yes }
							is_in_government = yes
						}
						law_stance = {
							law = law_type:law_free_trade
							value > neutral
						}
					}
					NOT = { has_diplomatic_pact = { who = ROOT type = trade_agreement } }
				}
			}
			c:USA = {
				create_diplomatic_pact = {
					country = ROOT
					type = trade_agreement
				}
				change_relations = { 
					country = ROOT 
					value = 100
				}
			}
		}
		
		ai_chance = { 
			base = 90 
		}
		
    }
	
	option = {
        name = historical_gov_changes.option.2					# Reject
		default_option = yes
		
		#Major discontent
		add_radicals = {
			value = medium_radicals
			strata = rich
		}
		add_radicals = {
			value = small_radicals
			strata = middle
		}
		
		ai_chance = { 
			base = 10 modifier = { trigger = { has_global_variable = historical_railroading_active } add = -100 } 
		}
		
    }

}

# Regional Comprehensive Economic Partnership
historical_economy.13 = {
    type = country_event

    title = RCEP.t 							# Title of the event; ADD LOCALISATION
    desc = RCEP.d 							# Description of the event; ADD LOCALISATION
    #flavor = RCEP.f 						# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/unspecific_signed_contract.bk2" }

    icon = "gfx/interface/icons/invention_icons/macroeconomics.dds" # Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {													# What triggers the event, if using other events or journal entries leave empty
		
		# Event has not been fired before
		NOT = { has_variable = RCEP_hee }						# CHANGE ****
		
		#Member conditions
		OR = { 
			has_variable = XNA_ambitions
			has_variable = XEA_ambitions
			has_variable = XSE_ambitions
			has_variable = XPI_ambitions
		}
		NOT = { country_is_in_india = yes }
		game_date >= 2022.1.1									# START DATE: Date colony became self governing ****
		game_date < 2032.1.1									# END DATE: All historical events must not fire 10 years after the START DATE ****
		
		NOT = { has_law = law_type:law_isolationism }
		is_sufficiently_independent = yes						# is_vassal = no		
		is_at_war = no											# war = no
		
		#PRC was the creator
		any_country = {
			OR = { 
				country_has_primary_culture = cu:chinese
				has_variable = is_RCEP_leader
			}
			is_sufficiently_independent = yes
			is_at_war = no
			country_rank >= rank_value:great_power
			NOT = { has_law = law_type:law_isolationism }
		}
		
    }
	
	immediate = {
	
		# Fire only once
		set_variable = RCEP_hee								# Change variable ****
		
	}
    
    option = {
        name = historical_gov_changes.option.1					# Accept
        highlighted_option = yes
		
		#Join Superstate EEC
		if = {
			limit = { has_journal_entry = je_superstate_system }
			set_variable = superstate_free_trade_zone
			create_superstate_free_trade_zone = yes
		}
		
		#If China
		if = {
			limit = { 
				country_has_primary_culture = cu:chinese
				is_sufficiently_independent = yes
				is_at_war = no
				country_rank >= rank_value:great_power
				NOT = { has_law = law_type:law_isolationism }
			}
			set_variable = is_RCEP_leader
		}
		
		#Free Trade Pact with China
		if = {
			limit = { 
				any_country = {
					has_variable = is_RCEP_leader
					country_has_primary_culture = cu:chinese
					is_sufficiently_independent = yes
					is_at_war = no
					country_rank >= rank_value:great_power
					NOT = { has_law = law_type:law_isolationism }
					NOT = { has_diplomatic_pact = { who = ROOT type = trade_agreement } }
				}
			}
			random_country = {
				limit = {
					country_has_primary_culture = cu:chinese
					is_sufficiently_independent = yes
					is_at_war = no
					country_rank >= rank_value:great_power
					NOT = { has_law = law_type:law_isolationism }
					NOT = { has_diplomatic_pact = { who = ROOT type = trade_agreement } }
				}
				create_diplomatic_pact = {
					country = ROOT
					type = trade_agreement
				}
				change_relations = { 
					country = ROOT 
					value = 100
				}
			}
		}
		
		ai_chance = { 
			base = 90 
		}
		
    }
	
	option = {
        name = historical_gov_changes.option.2					# Reject
		default_option = yes
		
		#Major discontent
		add_radicals = {
			value = medium_radicals
			strata = rich
		}
		add_radicals = {
			value = small_radicals
			strata = middle
		}
		
		ai_chance = { 
			base = 10 modifier = { trigger = { has_global_variable = historical_railroading_active } add = -100 } 
		}
		
    }

}

# Economic Liberalisation in India
historical_economy.14 = {
    type = country_event

    title = Indian_Economic_Liberalisation.t 					# Title of the event; ADD LOCALISATION
    desc = Indian_Economic_Liberalisation.d 					# Description of the event; ADD LOCALISATION
    #flavor = Indian_Economic_Liberalisation.f 					# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/southamerica_factory_opening.bk2" }

    icon = "gfx/interface/icons/invention_icons/macroeconomics.dds" 	# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {													# What triggers the event, if using other events or journal entries leave empty
		
		c:HND ?= this
		game_date >= 1991.7.24									# START DATE: Date colony became self governing ****
		game_date < 2001.7.24									# END DATE: All historical events must not fire 10 years after the START DATE ****
		
		is_a_democracy = yes									# Correct gov types
		is_sufficiently_independent = yes						# is_vassal = no		
		is_at_war = no											# war = no
		
		# Nationalised economy
		OR = {
			has_law = law_type:law_command_economy
			has_law = law_type:law_semi_command_economy
			has_law = law_type:law_state_capitalism
		}
		
		# Event has not been fired before
		NOT = { has_variable = Indian_Economic_Liberalisation_hee }				# CHANGE ****
		
    }
	
	immediate = {
	
		# Fire only once
		set_variable = Indian_Economic_Liberalisation_hee		# Change variable ****
		
	}
    
    option = {
        name = historical_economy_communist.option.1				# Accept
        highlighted_option = yes
		
		#Enact economic reform
		activate_law = law_type:law_interventionism
		activate_law = law_type:law_compulsory_primary_school	#Compulsory Tertiary School
		activate_law = law_type:law_public_schools
		set_institution_investment_level = { institution = institution_schools level = 3 }
		
		ai_chance = { 
			base = 90 
		}
		
    }
	
	option = {
        name = historical_economy_communist.option.2				# Reject
		default_option = yes
		
		#Major discontent
		add_radicals = {
			value = very_large_radicals
			strata = rich
		}
		add_radicals = {
			value = large_radicals
			strata = middle
		}
		add_radicals = {
			value = medium_radicals
			strata = poor
		}
		add_modifier = { 
			name = stirrings_of_revolution
			months = 60 
			is_decaying = yes 
		}
		
		ai_chance = { 
			base = 10 modifier = { trigger = { has_global_variable = historical_railroading_active } add = -100 } 
		}
		
    }

}

# Neo-Liberal Economics
historical_economy.15 = {
    type = country_event

    title = western_economic_liberalisation.t 					# Title of the event; ADD LOCALISATION
    desc = western_economic_liberalisation.d 					# Description of the event; ADD LOCALISATION
    flavor = western_economic_liberalisation.f 					# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/europenorthamerica_rich_and_poor.bk2" }

    icon = "gfx/interface/icons/invention_icons/macroeconomics.dds" 	# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {													# What triggers the event, if using other events or journal entries leave empty
		
		OR = { 
			has_law = law_type:law_command_economy
			has_law = law_type:law_semi_command_economy
			has_law = law_type:law_state_capitalism
			has_law = law_type:law_interventionism
		}
		
		#Western Bloc countries only
		OR = { 
			country_is_in_europe = yes
			country_is_in_north_america = yes
		}
		
		is_a_democracy = yes									# Correct gov types
		is_sufficiently_independent = yes						# is_vassal = no
		
		#1980s onwards only OR Cold War is over
		OR = {
		
			AND = { 
				has_technology_researched = tech_economy_5
				has_technology_researched = tech_politics_5
			}
		
			NOT = { 
				any_country = {
					country_rank = rank_value:super_power
					is_a_communist_government = yes
					OR = { 
						has_law = law_type:law_command_economy
						has_law = law_type:law_semi_command_economy
					}
				}
			}
			
			AND = { 
				game_date >= 1980.1.1
				right_wing_ruling_coalition = yes
			}
			
		}
		game_date < 2010.1.1
		
		# Event has not been fired before
		NOT = { has_variable = western_economic_liberalisation_hee }			# CHANGE ****
		
    }
	
	immediate = {
	
		# Fire only once
		set_variable = western_economic_liberalisation_hee						# Change variable ****
		
	}
	
	option = {
        name = historical_economy_western.option.1				# Accept
        highlighted_option = yes
		
		#Enact new regime
		if = { 
			limit = { 
				OR = {
					has_law = law_type:law_command_economy
					has_law = law_type:law_semi_command_economy
				}
			}
			effect_starting_politics_economic_policy_state_capitalism = yes
		}
		else_if = { 
			limit = { 
				has_law = law_type:law_state_capitalism
			}
			effect_starting_politics_economic_policy_interventionism = yes
		}
		else = {
			effect_starting_politics_economic_policy_laissez_faire = yes
		}
		
		ai_chance = { 
			base = 90 
		}
		
    }
	
	option = {
        name = historical_economy_western.option.2				# Reject
		default_option = yes
		
		#Major discontent
		if = {
			limit = { 
				OR = {
					has_healthy_economy = no
					in_default = yes
				}
			}
			add_radicals = {
				value = very_large_radicals
				strata = rich
			}
			add_radicals = {
				value = very_large_radicals
				strata = middle
			}
			add_modifier = { 
				name = stirrings_of_revolution
				months = 60 
				is_decaying = yes 
			}
		}
		
		ai_chance = { 
			base = 10 modifier = { trigger = { has_global_variable = historical_railroading_active } add = -100 } 
		}
		
    }

}

# Hungarian New Economic Mechanism
historical_economy.16 = {
    type = country_event

    title = HUN_NEM_Reforms.t 								# Title of the event; ADD LOCALISATION
    desc = HUN_NEM_Reforms.d 								# Description of the event; ADD LOCALISATION
    #flavor = HUN_NEM_Reforms.f 							# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/southamerica_factory_opening.bk2" }

    icon = "gfx/interface/icons/invention_icons/macroeconomics.dds" 	# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {													# What triggers the event, if using other events or journal entries leave empty
		
		#Overlord conditions
		c:HUN ?= this
		game_date >= 1968.1.1									# START DATE: Date colony became self governing ****
		game_date < 1978.1.1									# END DATE: All historical events must not fire 10 years after the START DATE ****
		
		is_a_communist_government = yes							# Correct gov types
		is_sufficiently_independent = yes						# is_vassal = no		
		is_at_war = no											# war = no
		
		has_law = law_type:law_command_economy
		
		# Event has not been fired before
		NOT = { has_variable = HUN_NEM_Reforms_hee }			# CHANGE ****
		
    }
	
	immediate = {
	
		# Fire only once
		set_variable = HUN_NEM_Reforms_hee						# Change variable ****
		
	}
    
    option = {
        name = historical_gov_changes.option.1					# Accept
        highlighted_option = yes
		
		#Enact new regime
		activate_law = law_type:law_semi_command_economy
		
		ai_chance = { 
			base = 90 
		}
		
    }
	
	option = {
        name = historical_gov_changes.option.2					# Reject
		default_option = yes
		
		#Major discontent
		add_radicals = {
			value = large_radicals
			strata = poor
		}
		
		ai_chance = { 
			base = 10 modifier = { trigger = { has_global_variable = historical_railroading_active } add = -100 } 
		}
		
    }

}

# The Great Leap Forward
historical_economy.17 = {
    type = country_event

    title = PRC_GLF_Reforms.t 								# Title of the event; ADD LOCALISATION
    desc = PRC_GLF_Reforms.d 								# Description of the event; ADD LOCALISATION
    #flavor = PRC_GLF_Reforms.f 							# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/southamerica_factory_opening.bk2" }

    icon = "gfx/interface/icons/invention_icons/macroeconomics.dds" 	# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 		# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {													# What triggers the event, if using other events or journal entries leave empty
		
		#Overlord conditions
		OR = { c:PRC ?= this c:CHI ?= this }
		game_date >= 1958.1.1									# START DATE: Date colony became self governing ****
		game_date < 1968.1.1									# END DATE: All historical events must not fire 10 years after the START DATE ****
		
		is_a_communist_government = yes							# Correct gov types
		is_sufficiently_independent = yes						# is_vassal = no		
		is_at_war = no											# war = no
		
		has_law = law_type:law_semi_command_economy
		
		exists = ruler
		ruler = { is_interest_group_type = ig_trade_unions is_historical = yes }
		
		# Event has not been fired before
		NOT = { has_variable = PRC_GLF_Reforms_hee }			# CHANGE ****
		
    }
	
	immediate = {
	
		# Fire only once
		set_variable = PRC_GLF_Reforms_hee						# Change variable ****
		
	}
    
    option = {
        name = PRC_GLF_Reforms.option.1							# Accept
        highlighted_option = yes
		
		#Enact new regime
		effect_starting_politics_economic_policy_planned_economy = yes
		effect_starting_politics_specialisation_manufacturing = yes
		
		#Modifier
		add_modifier = { 
			name = great_leap_forward 
			years = 5 
			is_decaying = yes
		}
		
		ai_chance = { 
			base = 90 
		}
		
    }
	
	option = {
        name = PRC_GLF_Reforms.option.2						# Reject
		default_option = yes
		
		#Major discontent amongst Maoists
		add_radicals = {
			value = large_radicals
			interest_group = ig:ig_trade_unions
		}
		add_radicals = {
			value = large_radicals
			interest_group = ig:ig_rural_folk
		}
		
		ai_chance = { 
			base = 10 modifier = { trigger = { has_global_variable = historical_railroading_active } add = -100 } 
		}
		
    }

}

# The Virgin Lands Campaign
historical_economy.18 = {
    type = country_event

    title = SOV_VLC_Reforms.t 								# Title of the event; ADD LOCALISATION
    desc = SOV_VLC_Reforms.d 								# Description of the event; ADD LOCALISATION
    #flavor = SOV_VLC_Reforms.f 							# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/southamerica_factory_opening.bk2" }

    icon = "gfx/interface/icons/invention_icons/macroeconomics.dds" 	# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 		# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {													# What triggers the event, if using other events or journal entries leave empty
		
		#Overlord conditions
		c:SOV ?= this
		game_date >= 1953.1.1									# START DATE: Date colony became self governing ****
		game_date < 1963.1.1									# END DATE: All historical events must not fire 10 years after the START DATE ****
		
		is_a_communist_government = yes							# Correct gov types
		is_sufficiently_independent = yes						# is_vassal = no		
		is_at_war = no											# war = no
		
		#Khrushchev
		exists = ruler
		ruler = { is_interest_group_type = ig_rural_folk is_historical = yes }
		
		# Event has not been fired before
		NOT = { has_variable = SOV_VLC_Reforms_hee }			# CHANGE ****
		
    }
	
	immediate = {
	
		# Fire only once
		set_variable = SOV_VLC_Reforms_hee						# Change variable ****
		
	}
    
    option = {
        name = SOV_VLC_Reforms.option.1							# Accept
        highlighted_option = yes
		
		#Modifier
		add_modifier = { 
			name = virgin_lands_campaign
			years = 5 
			is_decaying = yes
		}
		
		#Major discontent
		add_radicals = {
			value = large_radicals
			interest_group = ig:ig_trade_unions
		}
		add_loyalists = {
			value = large_radicals
			interest_group = ig:ig_rural_folk
		}
		
		ai_chance = { 
			base = 90 
		}
		
    }
	
	option = {
        name = SOV_VLC_Reforms.option.2						# Reject
		default_option = yes
		
		#Major discontent
		add_loyalists = {
			value = large_radicals
			interest_group = ig:ig_trade_unions
		}
		add_radicals = {
			value = large_radicals
			interest_group = ig:ig_rural_folk
		}
		
		ai_chance = { 
			base = 10 modifier = { trigger = { has_global_variable = historical_railroading_active } add = -100 } 
		}
		
    }

}

# East German New Economic System
historical_economy.19 = {
    type = country_event

    title = EGR_NES_Reforms.t 								# Title of the event; ADD LOCALISATION
    desc = EGR_NES_Reforms.d 								# Description of the event; ADD LOCALISATION
    #flavor = EGR_NES_Reforms.f 							# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/southamerica_factory_opening.bk2" }

    icon = "gfx/interface/icons/invention_icons/macroeconomics.dds" 	# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {													# What triggers the event, if using other events or journal entries leave empty
		
		#Overlord conditions
		OR = { c:EGR ?= this c:GER ?= this }
		game_date >= 1963.1.1									# START DATE: Date colony became self governing ****
		game_date < 1973.1.1									# END DATE: All historical events must not fire 10 years after the START DATE ****
		
		is_a_communist_government = yes							# Correct gov types
		is_sufficiently_independent = yes						# is_vassal = no		
		is_at_war = no											# war = no
		
		has_law = law_type:law_command_economy
		
		# Event has not been fired before
		NOT = { has_variable = EGR_NES_Reforms_hee }			# CHANGE ****
		
    }
	
	immediate = {
	
		# Fire only once
		set_variable = EGR_NES_Reforms_hee						# Change variable ****
		
	}
    
    option = {
        name = historical_gov_changes.option.1					# Accept
        highlighted_option = yes
		
		#Enact new regime
		activate_law = law_type:law_semi_command_economy
		
		ai_chance = { 
			base = 90 
		}
		
    }
	
	option = {
        name = historical_gov_changes.option.2					# Reject
		default_option = yes
		
		#Major discontent
		add_radicals = {
			value = large_radicals
			strata = poor
		}
		
		ai_chance = { 
			base = 10 modifier = { trigger = { has_global_variable = historical_railroading_active } add = -100 } 
		}
		
    }

}